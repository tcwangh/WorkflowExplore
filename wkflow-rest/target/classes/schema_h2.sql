DROP TABLE IF EXISTS contact;

create table contact(
	CONTACT_ID INT NOT NULL AUTO_INCREMENT,
	NAME  VARCHAR(45) NOT NULL,
	EMAIL VARCHAR(45) NOT NULL,
	ADDRESS VARCHAR(100) NOT NULL,
	TELEPHONE  VARCHAR(100) NOT NULL,
	PRIMARY KEY(CONTACT_ID)
);

CREATE TABLE WKFLW_TEMP (
	WKFLW_KEY   	VARCHAR(64) NOT NULL,
	WKFLW_ID 		VARCHAR(64) NOT NULL,
	WKFLW_NAME 		VARCHAR(256) NOT NULL,
	WKFLW_CATG 		VARCHAR(256) NOT NULL,
	WKFLW_REASON 	VARCHAR(256),
	WKFLW_DESC		VARCHAR(512),
	WKFLW_STATUS    VARCHAR(12) NOT NULL,
	WKFLW_PRIV_ID	VARCHAR(256),
	CLAIM_USER		VARCHAR(64),
	CLAIM_TIME      TIMESTAMP DEFAULT CURRENT_TIMESTAMP(),
	ACT_PROC_ID		VARCHAR(256),
	ACT_PROC_DEF_FILE_NAME VARCHAR(256),
	PRIMARY KEY (WKFLW_KEY)
);

CREATE TABLE WKFLW_TEMP_ENTY (
	WKFLW_KEY   	VARCHAR(64) NOT NULL,
	ENTITY_NAME		VARCHAR(128) NOT NULL,
	ENTITY_VAL 		VARCHAR(512) NOT NULL,
	ENTITY_DESC		VARCHAR(512) NOT NULL,
	ENTITY_MEMO 	VARCHAR(512),
	CLAIM_USER		VARCHAR(64),
	CLAIM_TIME	    TIMESTAMP,
	PRIMARY KEY (WKFLW_KEY,ENTITY_NAME,ENTITY_VAL)
);

CREATE TABLE WKFLW_TEMP_TASK (
	WKFLW_KEY   		VARCHAR(64) NOT NULL,
	TASK_SEQ_KEY		VARCHAR(128) NOT NULL,
	TASK_NAME			VARCHAR(256) NOT NULL,
	TASK_TYPE			VARCHAR(128) NOT NULL,
	TASK_GROUP_ID		VARCHAR(128) NOT NULL,
	SUB_WKFLW_ID		VARCHAR(256) NOT NULL,
	SUB_WKFLW_FUNC_ID	VARCHAR(256) NOT NULL,
	IS_MULTI_INST		VARCHAR(64) NOT NULL,
	COND_PARM_NAME		VARCHAR(256) NOT NULL,
	FAIL_RETRY_CNT		INT,
	RETRY_INTRVL		INT,
	MAX_RETRY_TIME		INT,
	START_NOTIFY_FLAG	VARCHAR(64) NOT NULL,
	START_NOTIFY_TYPE	VARCHAR(64) NOT NULL,
	END_NOTIFY_FLAG		VARCHAR(64) NOT NULL,
	END_NOTIFY_TYPE		VARCHAR(64) NOT NULL,
	PRIMARY KEY (WKFLW_KEY,TASK_SEQ_KEY)
);

CREATE TABLE WKFLW_TEMP_TASK_VAL (
	WKFLW_KEY   		VARCHAR(64) NOT NULL,
	TASK_SEQ_KEY		VARCHAR(128) NOT NULL,
	ENTITY_NAME			VARCHAR(256) NOT NULL,
	ENTITY_VAL 			VARCHAR(256) NOT NULL,
	ENTITY_TYEP			VARCHAR(256) NOT NULL,
	ENTITY_DESC			VARCHAR(512) NOT NULL,
	WKFLW_PARM_NAME		VARCHAR(64) NOT NULL,	
	IS_MULTI_INST		VARCHAR(64) NOT NULL,
	ACT_MULTI_PARM_NAME	VARCHAR(64) NOT NULL,
	PRIMARY KEY (WKFLW_KEY,TASK_SEQ_KEY,ENTITY_NAME)
);

CREATE TABLE WKFLW_TEMP_TASK_COND (
	WKFLW_KEY   		VARCHAR(64) NOT NULL,
	TASK_SEQ_KEY		VARCHAR(128) NOT NULL,
	COND_TYPE			VARCHAR(64) NOT NULL,
	COND_SEQ_KEY		VARCHAR(128) NOT NULL,
	DESCRIPTION			VARCHAR(256),
	COND_PARM_NAME		VARCHAR(256) NOT NULL,
	COND_SEQ_ID			VARCHAR(64) NOT NULL,
	SUB_WKFLW_ID		VARCHAR(256) NOT NULL,
	SUB_WKFLW_FUNC_ID	VARCHAR(256) NOT NULL,
	FAIL_RETRY_CNT		INT,
	RETRY_INTRVL		INT,
	MAX_RETRY_TIME		INT,
	ENABLE_BYPASS_TASK	VARCHAR(64) NOT NULL,
	BYPASS_TASK_COND_RESULT	VARCHAR(64) NOT NULL,
	PRIMARY KEY (WKFLW_KEY,TASK_SEQ_KEY,COND_TYPE)
);

CREATE TABLE WKFLW_TEMP_TASK_COND_VAL (
	WKFLW_KEY   		VARCHAR(64) NOT NULL,
	TASK_SEQ_KEY		VARCHAR(128) NOT NULL,
	COND_SEQ_KEY		VARCHAR(128) NOT NULL,
	COND_TYPE			VARCHAR(64) NOT NULL,
	SEQ_NO				INT,
	ENTITY_NAME			VARCHAR(256) NOT NULL,
	ENTITY_VAL 			VARCHAR(256) NOT NULL,
	ENTITY_TYEP			VARCHAR(256) NOT NULL,
	ENTITY_DESC			VARCHAR(512) NOT NULL,
	WKFLW_PARM_NAME		VARCHAR(64) NOT NULL,	
	IS_MULTI_INST		VARCHAR(64) NOT NULL,
	ACT_MULTI_PARM_NAME	VARCHAR(64) NOT NULL,
	PRIMARY KEY (WKFLW_KEY,TASK_SEQ_KEY,COND_SEQ_KEY,COND_TYPE,SEQ_NO,ENTITY_NAME)
);
